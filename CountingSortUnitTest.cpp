#include <vector>
#include <algorithm>
#include "CppUnitTest.h"
#include "..\SortLib\CountingSort.h"

using namespace Microsoft::VisualStudio::CppUnitTestFramework;

namespace SortUnitTest
{
	TEST_CLASS(CountingSortUnitTest)
	{
	public:
		template<typename Collection1, typename Collection2>
		void AreEqual(Collection1 const& col1, Collection2 const& col2)
		{
			Assert::AreEqual(col1.size(), col2.size());
			for (auto i1 = col1.begin(), i2 = col2.begin(); i1 != col1.end(); ++i1, ++i2)
				Assert::AreEqual(*i1, *i2);
		}

		template<typename Collection>
		void sortTest(Collection& toSort, size_t maxKey)
		{
			Collection sorted = toSort;
			std::sort(sorted.begin(), sorted.end());
			countingSort<Collection::iterator>(toSort.begin(), toSort.end(), maxKey);
			AreEqual(sorted, toSort);
		}

		TEST_METHOD(SortEmpty)
		{
			std::vector<int> toSort = { };
			sortTest(toSort, 10U);
		}
		TEST_METHOD(Sort1)
		{
			std::vector<int> toSort = { 2 };
			sortTest(toSort, 10U);
		}
		TEST_METHOD(Sort2)
		{
			std::vector<int> toSort = { 12, 7 };
			sortTest(toSort, 12U);
		}
		TEST_METHOD(Sort2Sorted)
		{
			std::vector<int> toSort = { 23, 45 };
			sortTest(toSort, 50U);
		}
		TEST_METHOD(Sort5)
		{
			std::vector<int> toSort = { 15, 5, 10, 8, 3 };
			sortTest(toSort, 20U);
		}
		TEST_METHOD(Sort5Sorted)
		{
			std::vector<int> toSort = { 3, 5, 8, 10, 15 };
			sortTest(toSort, 20U);
		}
		TEST_METHOD(Sort10)
		{
			std::vector<int> toSort = { 51, 15, 55, 5, 22, 10, 34, 8, 3, 28 };
			sortTest(toSort, 100U);
		}
		TEST_METHOD(Sort10Sorted)
		{
			std::vector<int> toSort = { 3, 5, 8, 10, 15, 22, 28, 34, 51, 55 };
			sortTest(toSort, 100U);
		}
		TEST_METHOD(Sort10Duplicates)
		{
			std::vector<int> toSort = { 51, 55, 55, 5, 22, 3, 34, 8, 3, 28 };
			sortTest(toSort, 100U);
		}
		TEST_METHOD(Sort10SortedDuplicates)
		{
			std::vector<int> toSort = { 3, 5, 10, 10, 22, 28, 34, 51, 55, 55 };
			sortTest(toSort, 100U);
		}
		TEST_METHOD(Sort100)
		{
			std::vector<int> toSort = { 171, 6, 138, 781, 996, 909, 721, 511, 131, 347, 283, 361, 565, 840, 229, 918, 935, 760, 54, 990, 236, 459, 42, 280, 222, 294, 269, 757, 233, 572, 926, 553, 215, 590, 620, 412, 886, 595, 944, 153, 771, 550, 972, 765, 558, 124, 306, 256, 873, 786, 690, 250, 331, 525, 992, 303, 277, 71, 574, 866, 492, 746, 741, 166, 832, 720, 895, 1000, 878, 894, 265, 784, 830, 248, 530, 602, 83, 363, 891, 785, 95, 819, 916, 881, 228, 660, 68, 437, 205, 174, 912, 100, 674, 526, 823, 554, 274, 479, 85, 629 };
			sortTest(toSort, 1000U);
		}
		TEST_METHOD(Sort1000)
		{
			std::vector<int> toSort = {};
			sortTest(toSort, 10000U);
		}
	};
}
